function testphrase(phrase) {
path = require('path');fs = require('fs')
list = []
listinconnue=""
//console.log("phrase à étudié : "+phrase)
//C:/Users/Administrateur/sarah/plugins/modules/mathildedico/memoire
 if(typeof filesnom==='undefined'){
 	  filesnom = fs.readFileSync(path.resolve('%CD%','./plugins/modules/mathildedico/memoire/nom.json' ).replace('\\%CD%', ''),'utf-8') ;
}	
if(typeof filesadverbe==='undefined'){
	  filesadverbe = fs.readFileSync(path.resolve('%CD%','./plugins/modules/mathildedico/memoire/adverbe.json').replace('\\%CD%', ''),'utf-8') 
}
 if(typeof filesverbe==='undefined'){       
      filesverbe = fs.readFileSync(path.resolve('%CD%','./plugins/modules/mathildedico/memoire/verbe.json').replace('\\%CD%', ''),'utf-8')
}	
if(typeof filesadjectif==='undefined'){
	  filesadjectif = fs.readFileSync(path.resolve('%CD%', './plugins/modules/mathildedico/memoire/adjectif.json').replace('\\%CD%', ''),'utf-8')
}
if(typeof filespréposition==='undefined'){	
	  filespréposition = fs.readFileSync(path.resolve('%CD%','./plugins/modules/mathildedico/memoire/préposition.json').replace('\\%CD%', ''),'utf-8')
 }  
if(typeof filesarticle==='undefined'){
	  filesarticle = fs.readFileSync(path.resolve('%CD%','./plugins/modules/mathildedico/memoire/article.json').replace('\\%CD%', ''),'utf-8')  
}
if(typeof filespronom==='undefined'){    
      filespronom = fs.readFileSync(path.resolve('%CD%','./plugins/modules/mathildedico/memoire/pronom.json' ).replace('\\%CD%', ''),'utf-8')
}
if(typeof filesinconnu==='undefined'){
      filesinconnu = fs.readFileSync(path.resolve('%CD%','./plugins/modules/mathildedico/memoire/inconnu.json' ).replace('\\%CD%', ''),'utf-8')
}
if(typeof filesconjonction==='undefined'){
      filesconjonction = fs.readFileSync(path.resolve('%CD%','./plugins/modules/mathildedico/memoire/conjonction.json' ).replace('\\%CD%', ''),'utf-8')
}
      		  jsonStrnom = JSON.parse(filesnom);
			  jsonStradverbe = JSON.parse(filesadverbe);
			  jsonStrverbe = JSON.parse(filesverbe);
			  jsonStradjectif = JSON.parse(filesadjectif);
			  jsonStrpréposition = JSON.parse(filespréposition);
			  jsonStrarticle = JSON.parse(filesarticle);
          	  jsonStrpronom = JSON.parse(filespronom);
          	  jsonStrinconnu = JSON.parse(filesinconnu);
          	  jsonStrconjonction= JSON.parse(filesconjonction)

	phrase=phrase.trim().split(" ");	console.log("phrase recu dans index/testphrase : "+phrase+" : ");	console.log(phrase.length)
	for(i=0;i<phrase.length;i++){//.search(new RegExp("\\b" + phrasetester[i] + "\\b","gi")) >-1)
						 // phrase1=phrase[i];  
					 phrase1=phrase[i].trim()
					//console.log('testttttttttt:+ '+phrase1)
						//  filesadjectif.search(new RegExp("\\b" + queryphraser1 + "\\b","gi")) >-1)
					
						if (filesnom.search(" "+phrase1+" ") >-1){list.push(phrase1);list.push(" nom ");phrase1="1"}
					    if (filesadverbe.search(" "+phrase1+" ")>-1){list.push(phrase1);list.push(" adverbe ");phrase1="1"}
						if (filesverbe.search(" "+phrase1+" ") >-1){list.push(phrase1);list.push(" verbe ");phrase1="1"}
						if (filesadjectif.search(" "+phrase1+" ") >-1){list.push(phrase1);list.push(" adjectif ");phrase1="1"}
						if (filespréposition.search(" "+phrase1+" ") >-1){list.push(phrase1);list.push(" préposition ");phrase1="1"}
						if (filesarticle.search(" "+phrase1+" ") >-1){list.push(phrase1);list.push(" article ");phrase1="1"}
						if (filespronom.search(" "+phrase1+" ") >-1){list.push(phrase1);list.push(" pronom ");phrase1="1"}
						if (filesconjonction.search(" "+phrase1+" ") >-1){list.push(phrase1);list.push(" conjonction ");phrase1="1"}
						//if (filesinconnu.search(new RegExp("\\b" + phrase1+ "\\b","gi" )) >-1){list.push(phrase1+" inconnu ");phrase1="1"}
if(phrase1!=="1"){list.push(phrase1);list.push(" inconnuuuuu ");listinconnue=listinconnue+" "+phrase1}
							
						//	console.log("la liste"+list)
	}							
							

// fs.writeFile(jsonstorage,JSON.stringify(jsoncontent,null,4)
//list = JSON.stringify(list);
//list=JSON.parse(list)
//objet.courses.push({item: query}); var new_jsonStr = JSON.stringify(objet);
//nom=nom.trim();//console.log("testttttttttttttttttt")
//	 ;//console.log("ob : "+objet1)
 // jsonStr1 = JSON.stringify(objet1);//console.log("js "+jsonStr1)
//	objet1.cyrano.push(nom);
 //data1 = JSON.stringify(objet1); //callback1 (data1);
//var data1111='{"cyrano1111":[]}';var objet1111 = JSON.parse(data1111)

//for (var xx=0;xx<list.length;xx++){
//objet1111.cyrano1111.push(list[xx])
//}
//var new_jsonStr = JSON.stringify(objet1111)



if(listinconnue!==""){
	console.log("on test ceci "+listinconnue)
	var dico=require(path.resolve('%CD%', './plugins/modules/mathildedico').replace('\\%CD%', '')) ; dico(listinconnue)
}

return list


//return new_jsonStr
}

module.exports = testphrase;